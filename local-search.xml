<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>关于某票务平台(爬虫-1)</title>
    <link href="/2024/08/25/%E5%85%B3%E4%BA%8E%E6%9F%90%E7%A5%A8%E5%8A%A1%E5%B9%B3%E5%8F%B0-%E7%88%AC%E8%99%AB-1/"/>
    <url>/2024/08/25/%E5%85%B3%E4%BA%8E%E6%9F%90%E7%A5%A8%E5%8A%A1%E5%B9%B3%E5%8F%B0-%E7%88%AC%E8%99%AB-1/</url>
    
    <content type="html"><![CDATA[<h2 id="关于某票务平台-1"><a href="#关于某票务平台-1" class="headerlink" title="关于某票务平台-1"></a>关于某票务平台-1</h2><p>这里在正式购票前会弹出 google recaptcha V2 的验证程序(如下图)</p><p><img src="/2024/08/25/%E5%85%B3%E4%BA%8E%E6%9F%90%E7%A5%A8%E5%8A%A1%E5%B9%B3%E5%8F%B0-%E7%88%AC%E8%99%AB-1/image.png" alt="google recapthca V2"></p><p>这里recaptcha V2的验证采用第三方解码平台进行绕过后，进行登录并抓包后发现</p><p>竟然提交了 loginId 与 password 这两个字段</p><p>而且登录过程中没有输入账号与密码</p><p><img src="/2024/08/25/%E5%85%B3%E4%BA%8E%E6%9F%90%E7%A5%A8%E5%8A%A1%E5%B9%B3%E5%8F%B0-%E7%88%AC%E8%99%AB-1/image-1.png" alt="登录抓包"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">loginId: 暂时不清楚是如何生成的<br>password: 同上<br>recaptchaResponse: google recaptcha V2 通过校验后返回的字段<br></code></pre></td></tr></table></figure><p>在Dev tools 中继续分析</p><p><img src="/2024/08/25/%E5%85%B3%E4%BA%8E%E6%9F%90%E7%A5%A8%E5%8A%A1%E5%B9%B3%E5%8F%B0-%E7%88%AC%E8%99%AB-1/image-3.png" alt="启动器"></p><p>可以知道最后提交登录时函数执行顺序：onclick()-&gt;submitLogin()-&gt;doLogin()-&gt;ajax()-&gt;send()，这里从submitLogin()开始分析</p><p>submitLogin()</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs javaScript"><span class="hljs-keyword">var</span> submitLogin = <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>  <span class="hljs-keyword">if</span> (e) e.<span class="hljs-title function_">preventDefault</span>();<br>  $(<span class="hljs-string">&quot;#loginForm .errorMsg&quot;</span>).<span class="hljs-title function_">hide</span>();<br>  $(<span class="hljs-string">&quot;#loginForm input&quot;</span>).<span class="hljs-title function_">removeClass</span>(<span class="hljs-string">&quot;invalid required&quot;</span>);<br><br>  <span class="hljs-keyword">var</span> loginId = $(<span class="hljs-string">&quot;#inputEmail&quot;</span>).<span class="hljs-title function_">val</span>();<br>  <span class="hljs-keyword">var</span> password = $(<span class="hljs-string">&quot;#inputPassword&quot;</span>).<span class="hljs-title function_">val</span>();<br>  <span class="hljs-keyword">var</span> captcha = $(<span class="hljs-string">&quot;#inputCaptcha&quot;</span>).<span class="hljs-title function_">val</span>();<br><br>  <span class="hljs-comment">// validation</span><br>  <span class="hljs-keyword">if</span> (loginId == <span class="hljs-string">&quot;&quot;</span>) $(<span class="hljs-string">&quot;#inputEmail&quot;</span>).<span class="hljs-title function_">addClass</span>(<span class="hljs-string">&quot;invalid required&quot;</span>);<br>  <span class="hljs-keyword">else</span> $(<span class="hljs-string">&quot;#inputEmail&quot;</span>).<span class="hljs-title function_">removeClass</span>(<span class="hljs-string">&quot;invalid required&quot;</span>);<br>  <span class="hljs-keyword">if</span> (password == <span class="hljs-string">&quot;&quot;</span>) $(<span class="hljs-string">&quot;#inputPassword&quot;</span>).<span class="hljs-title function_">addClass</span>(<span class="hljs-string">&quot;invalid required&quot;</span>);<br>  <span class="hljs-keyword">else</span> $(<span class="hljs-string">&quot;#inputPassword&quot;</span>).<span class="hljs-title function_">removeClass</span>(<span class="hljs-string">&quot;invalid required&quot;</span>);<br>  <span class="hljs-keyword">if</span> (verifyType == <span class="hljs-string">&quot;LEGACY&quot;</span> &amp;&amp; captcha == <span class="hljs-string">&quot;&quot;</span>)<br>    $(<span class="hljs-string">&quot;#inputCaptcha&quot;</span>).<span class="hljs-title function_">addClass</span>(<span class="hljs-string">&quot;invalid required&quot;</span>);<br>  <span class="hljs-keyword">else</span> $(<span class="hljs-string">&quot;#inputCaptcha&quot;</span>).<span class="hljs-title function_">removeClass</span>(<span class="hljs-string">&quot;invalid required&quot;</span>);<br>  <span class="hljs-keyword">if</span> (verifyType == <span class="hljs-string">&quot;RECAPTCHA&quot;</span> &amp;&amp; !recaptchaResponse)<br>    $(<span class="hljs-string">&quot;#loginRecaptcha&quot;</span>).<span class="hljs-title function_">addClass</span>(<span class="hljs-string">&quot;invalid required&quot;</span>);<br>  <span class="hljs-keyword">else</span> $(<span class="hljs-string">&quot;#loginRecaptcha&quot;</span>).<span class="hljs-title function_">removeClass</span>(<span class="hljs-string">&quot;invalid required&quot;</span>);<br>  <span class="hljs-keyword">if</span> (verifyType == <span class="hljs-string">&quot;TURNSTILE&quot;</span> &amp;&amp; !turnstileResponse)<br>    $(<span class="hljs-string">&quot;#loginTurnstile&quot;</span>).<span class="hljs-title function_">addClass</span>(<span class="hljs-string">&quot;invalid required&quot;</span>);<br>  <span class="hljs-keyword">else</span> $(<span class="hljs-string">&quot;#loginTurnstile&quot;</span>).<span class="hljs-title function_">removeClass</span>(<span class="hljs-string">&quot;invalid required&quot;</span>);<br>  <span class="hljs-keyword">if</span> (<br>    (!isCitylineLogin &amp;&amp; (loginId == <span class="hljs-string">&quot;&quot;</span> || password == <span class="hljs-string">&quot;&quot;</span>)) ||<br>    (verifyType == <span class="hljs-string">&quot;LEGACY&quot;</span> &amp;&amp; captcha == <span class="hljs-string">&quot;&quot;</span>) ||<br>    (verifyType == <span class="hljs-string">&quot;RECAPTCHA&quot;</span> &amp;&amp; recaptchaResponse == <span class="hljs-string">&quot;&quot;</span>) ||<br>    (verifyType == <span class="hljs-string">&quot;TURNSTILE&quot;</span> &amp;&amp; turnstileResponse == <span class="hljs-string">&quot;&quot;</span>)<br>  ) &#123;<br>    <span class="hljs-keyword">if</span> (verifyType == <span class="hljs-string">&quot;LEGACY&quot;</span>) &#123;<br>      <span class="hljs-comment">// reload captcha if submit login failed</span><br>      <span class="hljs-title function_">getCaptcha</span>();<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (verifyType == <span class="hljs-string">&quot;RECAPTCHA&quot;</span>) &#123;<br>      <span class="hljs-comment">// reload reCaptcha if submit login failed</span><br>      <span class="hljs-title function_">renderRecaptcha</span>($.<span class="hljs-title function_">i18n</span>().<span class="hljs-property">locale</span>);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (verifyType == <span class="hljs-string">&quot;TURNSTILE&quot;</span>) &#123;<br>      <span class="hljs-comment">// reload turnstile if submit login failed</span><br>      <span class="hljs-title function_">renderTurnstile</span>($.<span class="hljs-title function_">i18n</span>().<span class="hljs-property">locale</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br><br>  <span class="hljs-title function_">doLogin</span>(loginId, password, captcha);<br>&#125;;<br></code></pre></td></tr></table></figure><p>doLogin()</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javaScript"><span class="hljs-keyword">var</span> doLogin = <span class="hljs-keyword">function</span> (<span class="hljs-params">inputLogin, inputPassword, verifyCode</span>) &#123;<br>  <span class="hljs-keyword">var</span> loginId = inputLogin; <span class="hljs-comment">// f02</span><br>  <span class="hljs-keyword">var</span> password = inputPassword; <span class="hljs-comment">// 12345678</span><br>  <span class="hljs-keyword">var</span> password_sha256 = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-title class_">SHA256</span>(password).<span class="hljs-title function_">toString</span>();<br><br>  <span class="hljs-keyword">var</span> loginRequest = &#123;&#125;;<br>  loginRequest[<span class="hljs-string">&quot;loginId&quot;</span>] = loginId;<br>  loginRequest[<span class="hljs-string">&quot;password&quot;</span>] = password_sha256;<br>  <span class="hljs-keyword">if</span> (verifyType == <span class="hljs-string">&quot;LEGACY&quot;</span>) loginRequest[<span class="hljs-string">&quot;verifyCode&quot;</span>] = verifyCode;<br>  <span class="hljs-keyword">if</span> (verifyType == <span class="hljs-string">&quot;RECAPTCHA&quot;</span>)<br>    loginRequest[<span class="hljs-string">&quot;recaptchaResponse&quot;</span>] = recaptchaResponse;<br>  <span class="hljs-keyword">if</span> (verifyType == <span class="hljs-string">&quot;TURNSTILE&quot;</span>)<br>    loginRequest[<span class="hljs-string">&quot;turnstileResponse&quot;</span>] = turnstileResponse;<br>  $.<span class="hljs-title function_">ajax</span>(&#123;<br>    <span class="hljs-attr">url</span>: contextPath + <span class="hljs-string">&quot;/internet/api/client/login&quot;</span>,<br>    <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;POST&quot;</span>,<br>    <span class="hljs-attr">data</span>: <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(loginRequest),<br>    <span class="hljs-attr">contentType</span>: <span class="hljs-string">&quot;application/json; charset=utf-8&quot;</span>,<br>    <span class="hljs-attr">dataType</span>: <span class="hljs-string">&quot;json&quot;</span>,<br>    <span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>) &#123;<br>        <span class="hljs-comment">// 省略</span><br>  &#125;);<br>&#125;;<br></code></pre></td></tr></table></figure><p>这里可以看出关键就在于doLogin()函数中，</p><p>CryptoJS.SHA256(password).toString()对password进行了加密。</p><p>这里有很奇怪的是提交的loginId为空，那么password字段又是怎么来的呢？</p><p>(这里猜测了一下password本来就是空的，以至于后面sha256加密也是对空字符进行加密)随便找个在线sha256加密的工具验证一下猜测</p><p><img src="/2024/08/25/%E5%85%B3%E4%BA%8E%E6%9F%90%E7%A5%A8%E5%8A%A1%E5%B9%B3%E5%8F%B0-%E7%88%AC%E8%99%AB-1/image-4.png" alt="sha256在线加密"></p><p>结果显然易见了，和猜测的一样。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/03/23/hello-world/"/>
    <url>/2022/03/23/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>or </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo s<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>or </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo g<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>or </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo d<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
